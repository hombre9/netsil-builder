---
# This works with the netsil-dcos-gce scripts
- hosts: allnodes
  vars_files:
    - "{{ apps_dir }}/build/vars/services.yml"
    - "{{ apps_dir }}/build/vars/cluster.yml"
    - "{{ apps_dir }}/build/vars/build.yml"
  vars:
    netsil_build_branch: "{{ services_vars['netsil_build_branch'] }}"
    netsil_version_number: "{{ services_vars['netsil_version_number'] }}"
    netsil_commit_hash: "{{ services_vars['netsil_commit_hash'] }}"
    netsil_build_number: "{{ services_vars['netsil_build_number'] }}"
    netsil_version_tag: "{{ services_vars['netsil_version_tag'] }}"
    uri_namespace: "{{ cluster_vars['uri_namespace'] }}"
    is_private_registry: "{{ cluster_vars['is_private_registry'] }}"
    resource_role: "{{ cluster_vars['resource_role'] }}"
    build_env: "{{ cluster_vars['build_env'] }}"
    build_type: "cloud"
    force_pull_image: "{{ cluster_vars['force_pull_image'] }}"
    mesos_master_ip_list: "127.0.0.1"
    ### Start: ansible-specific vars ###
    ansible_user: centos
    ### End: ansible-specific vars ###

  gather_facts: True
  become: yes
  become_user: root

  roles:
    - initialize-dcos-node
    - configure-dcos-node

- hosts: masters
  vars_files:
    - "{{ apps_dir }}/build/vars/services.yml"
    - "{{ apps_dir }}/build/vars/cluster.yml"
    - "{{ apps_dir }}/build/vars/build.yml"
  vars:
    build_env: "{{ cluster_vars['build_env'] }}"
    build_type: "cloud"
    ### Start: ansible-specific vars ###
    ansible_user: centos
    ### End: ansible-specific vars ###

  gather_facts: True
  become: yes
  become_user: root

  roles:
    - configure-dcos-master

- hosts: agents
  vars_files:
    - "{{ apps_dir }}/build/vars/services.yml"
    - "{{ apps_dir }}/build/vars/cluster.yml"
    - "{{ apps_dir }}/build/vars/build.yml"
  vars:
    netsil_build_branch: "{{ services_vars['netsil_build_branch'] }}"
    netsil_version_number: "{{ services_vars['netsil_version_number'] }}"
    netsil_commit_hash: "{{ services_vars['netsil_commit_hash'] }}"
    netsil_build_number: "{{ services_vars['netsil_build_number'] }}"
    netsil_version_tag: "{{ services_vars['netsil_version_tag'] }}"
    uri_namespace: "{{ cluster_vars['uri_namespace'] }}"
    is_private_registry: "{{ cluster_vars['is_private_registry'] }}"
    resource_role: "{{ cluster_vars['resource_role'] }}"
    build_env: "{{ cluster_vars['build_env'] }}"
    build_type: "cloud"
    force_pull_image: "{{ cluster_vars['force_pull_image'] }}"
    src_credentials_dir: "/home/centos/.docker"
    setup_worker: "{{ setup_worker | default('no') }}"
    ### Start: ansible-specific vars ###
    ansible_user: centos
    ansible_python_interpreter: /usr/bin/python
    ### End: ansible-specific vars ###

  gather_facts: True
  become: yes
  become_user: root

  roles:
    - inject-credentials
    - configure-dcos-slave
    - template-marathon-apps
    - pull-binaries
    - install-startup-scripts
    - setup-worker # Only runs when we are adding an agent/worker to a pre-existing cluster

- hosts: netsil-cloud-agent0001
  vars:
    ansible_python_interpreter: /usr/bin/python
    
  gather_facts: True
  become: yes
  become_user: root

  roles:
    - install-cloud-apps
